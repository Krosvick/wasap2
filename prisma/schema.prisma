// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

//Tablas pensadas: Usuarios, Amigos, sesion por chat, chat, mensajes.

//IGNORE THIS!!!!
//better to do this in singular than plural.
model User {
  id       String      @id @default(auto()) @map("_id") @db.ObjectId
  username String      @unique
  email    String      @unique
  password String
  contacts Friendlist? @relation("Owner")
  conversations Conversation[] @relation("Participants", fields: [conversationsId], references: [id])
  conversationsId String[] @db.ObjectId

  //Think moment.
  friendListPlace    Friendlist[] @relation("Contacts", fields: [friendListPlaceIds], references: [id])
  friendListPlaceIds String[]     @db.ObjectId
}

model Friendlist {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  owner     User     @relation("Owner", fields: [userId], references: [id])
  userId    String   @unique @db.ObjectId
  friends   User[]   @relation("Contacts", fields: [friendsId], references: [id])
  friendsId String[] @db.ObjectId
}

model Message {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  conversation  Conversation @relation("Messages", fields: [conversationId], references: [id])
  conversationId String @db.ObjectId
  readed    Boolean @default(false)
  createdAt DateTime @default(now())
}

model Conversation {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  messages  Message[] @relation("Messages")
  participants User[] @relation("Participants" , fields: [participantsId], references: [id])
  participantsId String[] @db.ObjectId
}